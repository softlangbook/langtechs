package fsml.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.intentions.IntentionExecutable;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collections;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.intentions.IntentionDescriptor;

public class Make_Initial_Intention implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public Make_Initial_Intention() {
  }
  public String getConcept() {
    return "fsml.structure.State";
  }
  public String getPresentation() {
    return "Make_Initial";
  }
  public String getPersistentStateKey() {
    return "fsml.intentions.Make_Initial_Intention";
  }
  public String getLanguageFqName() {
    return "fsml";
  }
  public IntentionType getType() {
    return IntentionType.NORMAL;
  }
  public boolean isAvailableInChildNodes() {
    return false;
  }
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    return true;
  }
  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:6139291b-5401-465d-ba30-ab70bd7eeb5c(fsml.intentions)", "4524322011157657428");
  }
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new Make_Initial_Intention.IntentionImplementation());
    }
    return myCachedExecutable;
  }
  public class IntentionImplementation implements IntentionExecutable {
    public IntentionImplementation() {
    }
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Make State Initial";
    }
    public void execute(final SNode node, final EditorContext editorContext) {
      ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(node, MetaAdapterFactory.getConcept(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x6bf90571c2db857fL, "fsml.structure.Fsm"), false, false), MetaAdapterFactory.getContainmentLink(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x6bf90571c2db857fL, 0x3ec99ee5f4546874L, "states"))).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return (SLinkOperations.getTarget(it, MetaAdapterFactory.getContainmentLink(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f453e5c2L, 0x3ec99ee5f4546880L, "initial")) != null);
        }
      }).visitAll(new IVisitor<SNode>() {
        public void visit(SNode it) {
          SLinkOperations.setTarget(it, MetaAdapterFactory.getContainmentLink(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f453e5c2L, 0x3ec99ee5f4546880L, "initial"), null);
        }
      });
      SLinkOperations.setTarget(node, MetaAdapterFactory.getContainmentLink(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f453e5c2L, 0x3ec99ee5f4546880L, "initial"), SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f4546390L, "fsml.structure.Initial"))));
    }
    public IntentionDescriptor getDescriptor() {
      return Make_Initial_Intention.this;
    }
  }
}
