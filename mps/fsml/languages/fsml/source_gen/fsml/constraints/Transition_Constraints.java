package fsml.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SReferenceLinkId;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.scope.ListScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;

public class Transition_Constraints extends BaseConstraintsDescriptor {
  public Transition_Constraints() {
    super(MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f4546367L));
  }
  @Override
  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {
    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();
    references.put(MetaIdFactory.refId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f4546367L, 0x3ec99ee5f4546896L), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f4546367L, 0x3ec99ee5f4546896L), this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_mgdfdy_a0a0a0a0a1a0b0a1a1;
          }
          @Override
          public Scope createScope(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {
            {
              final Iterable<SNode> states = ListSequence.fromList(SNodeOperations.getNodeDescendants(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x6bf90571c2db857fL, "fsml.structure.Fsm"), false, false), MetaAdapterFactory.getConcept(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f453e5c2L, "fsml.structure.State"), false, new SAbstractConcept[]{})).where(new IWhereFilter<SNode>() {
                public boolean accept(SNode it) {
                  return !(ListSequence.fromList(SNodeOperations.getNodeAncestors(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f453e5c2L, "fsml.structure.State"), true)).contains(it));
                }
              });
              return new ListScope(states) {
                public String getName(SNode child) {
                  return SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, "jetbrains.mps.lang.core.structure.INamedConcept")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
                }
              };
            }
          }
        };
      }
    });
    return references;
  }
  private static SNodePointer breakingNode_mgdfdy_a0a0a0a0a1a0b0a1a1 = new SNodePointer("r:b8841e23-20f0-4a37-9dc5-883962f6ecd5(fsml.constraints)", "8949684459670372648");
}
