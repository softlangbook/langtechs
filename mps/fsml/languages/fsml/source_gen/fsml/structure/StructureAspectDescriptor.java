package fsml.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptAction = new ConceptDescriptorBuilder("fsml.structure.Action", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f454634fL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).create();
  /*package*/ final ConceptDescriptor myConceptFsm = new ConceptDescriptorBuilder("fsml.structure.Fsm", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x6bf90571c2db857fL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(4524322011154245748L, "states", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f453e5c2L), true, true, false)).children(new String[]{"states"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptInitial = new ConceptDescriptorBuilder("fsml.structure.Initial", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f4546390L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).create();
  /*package*/ final ConceptDescriptor myConceptInput = new ConceptDescriptorBuilder("fsml.structure.Input", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f4546357L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).create();
  /*package*/ final ConceptDescriptor myConceptState = new ConceptDescriptorBuilder("fsml.structure.State", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f453e5c2L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(4524322011154245760L, "initial", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f4546390L), true, false, false), new ConceptDescriptorBuilder.Link(4524322011154245762L, "transitions", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f4546367L), true, true, false)).children(new String[]{"initial", "transitions"}, new boolean[]{false, true}).create();
  /*package*/ final ConceptDescriptor myConceptTransition = new ConceptDescriptorBuilder("fsml.structure.Transition", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f4546367L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(4524322011154245782L, "target", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f453e5c2L), true)).references("target").childDescriptors(new ConceptDescriptorBuilder.Link(4524322011154245777L, "input", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f4546357L), false, false, false), new ConceptDescriptorBuilder.Link(4524322011154245779L, "action", MetaIdFactory.conceptId(0x1e0d5fd6c07a4df5L, 0x9c9bc73735ba6c37L, 0x3ec99ee5f454634fL), true, false, false)).children(new String[]{"input", "action"}, new boolean[]{false, false}).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAction, myConceptFsm, myConceptInitial, myConceptInput, myConceptState, myConceptTransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0k, conceptFqName)) {
      case 0:
        return myConceptAction;
      case 1:
        return myConceptFsm;
      case 2:
        return myConceptInitial;
      case 3:
        return myConceptInput;
      case 4:
        return myConceptState;
      case 5:
        return myConceptTransition;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0k = new String[]{"fsml.structure.Action", "fsml.structure.Fsm", "fsml.structure.Initial", "fsml.structure.Input", "fsml.structure.State", "fsml.structure.Transition"};
}
